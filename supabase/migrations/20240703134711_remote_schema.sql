SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";
COMMENT ON SCHEMA "public" IS 'standard public schema';
CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";
SET default_tablespace = '';
SET default_table_access_method = "heap";
CREATE TABLE IF NOT EXISTS "public"."circle_admins" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "circle_id" bigint NOT NULL
);
ALTER TABLE "public"."circle_admins" OWNER TO "postgres";
ALTER TABLE "public"."circle_admins" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."circle_admins_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."circle_members" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" bigint NOT NULL,
    "circle_id" bigint NOT NULL,
    "name" "text"
);
ALTER TABLE "public"."circle_members" OWNER TO "postgres";
ALTER TABLE "public"."circle_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."circle_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."circles" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "slug" "text" NOT NULL
);
ALTER TABLE "public"."circles" OWNER TO "postgres";
ALTER TABLE "public"."circles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."circles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."game_results" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "game_id" bigint NOT NULL,
    "member_id" bigint NOT NULL,
    "elo" smallint NOT NULL,
    "winner" boolean DEFAULT false
);
ALTER TABLE "public"."game_results" OWNER TO "postgres";
ALTER TABLE "public"."game_results" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_results_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."games" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "circle_id" bigint NOT NULL,
    "comment" "text"
);
ALTER TABLE "public"."games" OWNER TO "postgres";
ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_sessions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."old_members" (
    "id" bigint NOT NULL,
    "user_id" "uuid",
    "name" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);
ALTER TABLE "public"."old_members" OWNER TO "postgres";
ALTER TABLE "public"."old_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."members_id_seq1"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE OR REPLACE VIEW "public"."members_stats" AS
 SELECT DISTINCT ON ("circle_members"."id") "circle_members"."name",
    "circle_members"."circle_id",
    "circle_members"."id" AS "member_id",
    "latest_result"."elo",
    "latest_game"."id" AS "latest_game",
    "first_game"."id" AS "first_game",
    "total_games"."count" AS "total_games",
    "total_games"."total_wins"
   FROM ((((("public"."circle_members"
     RIGHT JOIN "public"."game_results" "latest_result" ON (("latest_result"."member_id" = "circle_members"."id")))
     RIGHT JOIN "public"."games" "latest_game" ON (("latest_game"."id" = "latest_result"."game_id")))
     RIGHT JOIN "public"."game_results" "first_result" ON (("first_result"."member_id" = "circle_members"."id")))
     RIGHT JOIN "public"."games" "first_game" ON (("first_game"."id" = "first_result"."game_id")))
     LEFT JOIN ( SELECT "game_results"."member_id",
            "count"(*) AS "count",
            "sum"(
                CASE
                    WHEN ("game_results"."winner" = true) THEN 1
                    ELSE 0
                END) AS "total_wins"
           FROM "public"."game_results"
          GROUP BY "game_results"."member_id") "total_games" ON (("total_games"."member_id" = "circle_members"."id")))
  ORDER BY "circle_members"."id", "circle_members"."circle_id", "latest_result"."created_at" DESC, "first_result"."created_at";
ALTER TABLE "public"."members_stats" OWNER TO "postgres";
ALTER TABLE ONLY "public"."circle_admins"
    ADD CONSTRAINT "circle_admins_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "circle_members_id_key" UNIQUE ("id");
ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "circle_members_pkey" PRIMARY KEY ("id", "circle_id");
ALTER TABLE ONLY "public"."circles"
    ADD CONSTRAINT "circles_pathname_key" UNIQUE ("slug");
ALTER TABLE ONLY "public"."circles"
    ADD CONSTRAINT "circles_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "game_results_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "game_sessions_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."old_members"
    ADD CONSTRAINT "members_pkey1" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "game_results_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."games"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_circle_id_fkey" FOREIGN KEY ("circle_id") REFERENCES "public"."circles"("id");
ALTER TABLE ONLY "public"."old_members"
    ADD CONSTRAINT "members_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE SET NULL;
ALTER TABLE ONLY "public"."circle_admins"
    ADD CONSTRAINT "public_circle_admins_circle_id_fkey" FOREIGN KEY ("circle_id") REFERENCES "public"."circles"("id");
ALTER TABLE ONLY "public"."circle_admins"
    ADD CONSTRAINT "public_circle_admins_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");
ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "public_circle_members_new_circle_id_fkey" FOREIGN KEY ("circle_id") REFERENCES "public"."circles"("id");
ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "public_game_results_member_id_fkey" FOREIGN KEY ("member_id") REFERENCES "public"."circle_members"("id");
CREATE POLICY "Enable insert for authenticated users only" ON "public"."old_members" FOR INSERT TO "authenticated" WITH CHECK (true);
CREATE POLICY "Enable read access for all users" ON "public"."circles" FOR SELECT USING (true);
CREATE POLICY "Enable read access for all users" ON "public"."game_results" FOR SELECT USING (true);
CREATE POLICY "Enable read access for all users" ON "public"."games" FOR SELECT USING (true);
CREATE POLICY "Enable read access for all users" ON "public"."old_members" FOR SELECT USING (true);
ALTER TABLE "public"."old_members" ENABLE ROW LEVEL SECURITY;
ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
GRANT ALL ON TABLE "public"."circle_admins" TO "anon";
GRANT ALL ON TABLE "public"."circle_admins" TO "authenticated";
GRANT ALL ON TABLE "public"."circle_admins" TO "service_role";
GRANT ALL ON SEQUENCE "public"."circle_admins_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."circle_admins_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."circle_admins_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."circle_members" TO "anon";
GRANT ALL ON TABLE "public"."circle_members" TO "authenticated";
GRANT ALL ON TABLE "public"."circle_members" TO "service_role";
GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."circles" TO "anon";
GRANT ALL ON TABLE "public"."circles" TO "authenticated";
GRANT ALL ON TABLE "public"."circles" TO "service_role";
GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."game_results" TO "anon";
GRANT ALL ON TABLE "public"."game_results" TO "authenticated";
GRANT ALL ON TABLE "public"."game_results" TO "service_role";
GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";
GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."old_members" TO "anon";
GRANT ALL ON TABLE "public"."old_members" TO "authenticated";
GRANT ALL ON TABLE "public"."old_members" TO "service_role";
GRANT ALL ON SEQUENCE "public"."members_id_seq1" TO "anon";
GRANT ALL ON SEQUENCE "public"."members_id_seq1" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."members_id_seq1" TO "service_role";
GRANT ALL ON TABLE "public"."members_stats" TO "anon";
GRANT ALL ON TABLE "public"."members_stats" TO "authenticated";
GRANT ALL ON TABLE "public"."members_stats" TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";
RESET ALL;
