SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."circle_members" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" bigint NOT NULL,
    "circle_id" bigint NOT NULL,
    "name" "text",
    "user_id" "uuid"
);

ALTER TABLE "public"."circle_members" OWNER TO "postgres";

ALTER TABLE "public"."circle_members" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."circle_members_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."circles" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "slug" "text" NOT NULL
);

ALTER TABLE "public"."circles" OWNER TO "postgres";

ALTER TABLE "public"."circles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."circles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."game_results" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "game_id" bigint NOT NULL,
    "member_id" bigint NOT NULL,
    "elo" smallint NOT NULL,
    "winner" boolean DEFAULT false,
    "previous_elo" smallint NOT NULL
);

ALTER TABLE "public"."game_results" OWNER TO "postgres";

ALTER TABLE "public"."game_results" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_results_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."games" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "circle_id" bigint NOT NULL,
    "comment" "text"
);

ALTER TABLE "public"."games" OWNER TO "postgres";

ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_sessions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."member_invitations" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "member_id" bigint NOT NULL,
    "email" "text" NOT NULL,
    "invited_by" bigint NOT NULL
);

ALTER TABLE "public"."member_invitations" OWNER TO "postgres";

ALTER TABLE "public"."member_invitations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."member_invitations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "email" "text" NOT NULL,
    "user_id" "uuid" NOT NULL
);

ALTER TABLE "public"."profiles" OWNER TO "postgres";

ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "circle_members_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "circle_members_pkey" PRIMARY KEY ("id", "circle_id");

ALTER TABLE ONLY "public"."circles"
    ADD CONSTRAINT "circles_pathname_key" UNIQUE ("slug");

ALTER TABLE ONLY "public"."circles"
    ADD CONSTRAINT "circles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "game_results_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "game_sessions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."member_invitations"
    ADD CONSTRAINT "member_invitations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_email_key" UNIQUE ("email");

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("user_id");

ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "game_results_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."games"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "public_circle_members_circle_id_fkey" FOREIGN KEY ("circle_id") REFERENCES "public"."circles"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."circle_members"
    ADD CONSTRAINT "public_circle_members_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."game_results"
    ADD CONSTRAINT "public_game_results_member_id_fkey" FOREIGN KEY ("member_id") REFERENCES "public"."circle_members"("id");

ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "public_games_circle_id_fkey" FOREIGN KEY ("circle_id") REFERENCES "public"."circles"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."member_invitations"
    ADD CONSTRAINT "public_member_invitations_invited_by_fkey" FOREIGN KEY ("invited_by") REFERENCES "public"."circle_members"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."member_invitations"
    ADD CONSTRAINT "public_member_invitations_member_id_fkey" FOREIGN KEY ("member_id") REFERENCES "public"."circle_members"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."profiles"
    ADD CONSTRAINT "public_profiles_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;

CREATE POLICY "Enable read access for all users" ON "public"."member_invitations" FOR SELECT USING (true);

CREATE POLICY "Enable read access for all users" ON "public"."profiles" FOR SELECT USING (true);

CREATE POLICY "Public can read all circle members" ON "public"."circle_members" FOR SELECT USING (true);

CREATE POLICY "Public can read all circles" ON "public"."circles" FOR SELECT USING (true);

CREATE POLICY "Public can read all game results" ON "public"."game_results" FOR SELECT USING (true);

CREATE POLICY "Public can read all games" ON "public"."games" FOR SELECT USING (true);

ALTER TABLE "public"."circle_members" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."circles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."game_results" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."games" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."member_invitations" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."profiles" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."circle_members" TO "anon";
GRANT ALL ON TABLE "public"."circle_members" TO "authenticated";
GRANT ALL ON TABLE "public"."circle_members" TO "service_role";

GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."circle_members_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."circles" TO "anon";
GRANT ALL ON TABLE "public"."circles" TO "authenticated";
GRANT ALL ON TABLE "public"."circles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."circles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."game_results" TO "anon";
GRANT ALL ON TABLE "public"."game_results" TO "authenticated";
GRANT ALL ON TABLE "public"."game_results" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_results_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";

GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_sessions_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."member_invitations" TO "anon";
GRANT ALL ON TABLE "public"."member_invitations" TO "authenticated";
GRANT ALL ON TABLE "public"."member_invitations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."member_invitations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."member_invitations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."member_invitations_id_seq" TO "service_role";


GRANT ALL ON TABLE "public"."profiles" TO "anon";
GRANT ALL ON TABLE "public"."profiles" TO "authenticated";
GRANT ALL ON TABLE "public"."profiles" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;

--
-- Dumped schema changes for auth and storage
--

